[{"C:\\Programs\\Netology\\homework_18-chat\\src\\index.js":"1","C:\\Programs\\Netology\\homework_18-chat\\src\\reportWebVitals.js":"2","C:\\Programs\\Netology\\homework_18-chat\\src\\App.js":"3","C:\\Programs\\Netology\\homework_18-chat\\src\\components\\Message.jsx":"4","C:\\Programs\\Netology\\homework_18-chat\\src\\components\\Form.jsx":"5","C:\\Programs\\Netology\\homework_18-chat\\src\\components\\ScrollDown.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1921,"mtime":1611343576792,"results":"10","hashOfConfig":"8"},{"size":446,"mtime":1611343666773,"results":"11","hashOfConfig":"8"},{"size":738,"mtime":1611256801324,"results":"12","hashOfConfig":"8"},{"size":258,"mtime":1611343701178,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"39jo82",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Programs\\Netology\\homework_18-chat\\src\\index.js",[],["28","29"],"C:\\Programs\\Netology\\homework_18-chat\\src\\reportWebVitals.js",[],"C:\\Programs\\Netology\\homework_18-chat\\src\\App.js",["30"],"import {useState, useEffect, useRef} from 'react';\nimport {nanoid} from 'nanoid';\nimport Message from './components/Message';\nimport Form from './components/Form';\nimport ScrollDown from './components/ScrollDown';\nimport './App.css';\n\n\nfunction App() {\n  const color = ['#da6262', '#2196f3', '#ff9800'];\n  const [messages, setMessages] = useState([]);\n  const chat = useRef(null);\n\n//Effect for bind local indificator\n  useEffect(() => {\n    if (!localStorage.getItem('userId')) {\n      localStorage.setItem('userId', nanoid())\n    };\n  },[])\n\n//Effect for update info\n  useEffect(() => {\n    const getData = async() => {\n      const response = await fetch('http://localhost:7777/messages?from=0');\n      const result = await response.json();\n      const onlyUser = result.map(i => i.userId);\n      const onlyUniq = new Set(onlyUser);\n      const onlyUniqArr = Array.from(onlyUniq);\n      const onlyUniqWithColor = onlyUniqArr.map((i,idx) => ({[i]: color[idx]}));\n      const userColorDictionary = Object.assign({}, ...onlyUniqWithColor)\n      const newResult = result.map(i => ({...i, color: userColorDictionary[i.userId]}))\n      setMessages(newResult);\n    }\n    getData();\n    const interval = setInterval(() => {\n      getData();\n    }, 500)\n    return () => {clearInterval(interval)}\n  }, [])\n\n  const throwChatDown  = () => {\n    chat.current.scrollTo(0, chat.current.scrollHeight)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='Header'>Anonimus chat</h1>\n      <div className='ChatWrapper'>\n        <ScrollDown throwDowm={throwChatDown}/>\n        <div className='Chat' ref={chat}>\n          <div className='MessagesWrapper'>\n          {messages.map(message => (\n            <Message key={message.id} userId={message.userId} content={message.content} color={message.color}/>\n          ))}\n          </div>\n        </div>          \n      </div>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Programs\\Netology\\homework_18-chat\\src\\components\\Message.jsx",[],"C:\\Programs\\Netology\\homework_18-chat\\src\\components\\Form.jsx",[],"C:\\Programs\\Netology\\homework_18-chat\\src\\components\\ScrollDown.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":39,"column":6,"nodeType":"37","endLine":39,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'color'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [color]",{"range":"44","text":"45"},[1295,1297],"[color]"]